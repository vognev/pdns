#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

$registry = new \PDNS\DNS\Registry();
$client = new \PDNS\Docker\EngineClient(
    \PDNS\Docker\SocketFactory::createFromEnvironment()
);

foreach($client->getContainers() as $container) {
    $container = $client->getContainer($container['Id']);
    if (isset($container['Id'])) {
        $registry->appendDockerContainer(
            $container['Id'],
            $container['Config']['Labels'],
            $container['NetworkSettings']['Networks']
        );
    }
}

(new \PDNS\Docker\EventListener(
    \PDNS\Docker\SocketFactory::createFromEnvironment()
))->setEventCallback(function(array $event) use ($registry, $client) {
    switch ($event['status']) {
        case 'die': $registry->removeDockerContainer($event['id']); break;
        case 'start':
            $container = $client->getContainer($event['id']);
            $registry->appendDockerContainer(
                $container['Id'],
                $container['Config']['Labels'],
                $container['NetworkSettings']['Networks']
            );
            break;
    }
})->loop();
